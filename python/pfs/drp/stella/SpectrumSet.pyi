from re import S
from typing import Iterator, overload
import numpy as np
from .Spectrum import Spectrum

class SpectrumSet:
    @overload
    def __init__(self, length: int): ...
    @overload
    def __init__(self, nSpectra: int, length: int): ...
    def size(self) -> int: ...
    def reserve(self, num: int): ...
    def add(self, spectrum: Spectrum): ...
    def getLength(self) -> int: ...
    def getAllFiberIds(self) -> np.ndarray: ...
    def getAllFluxes(self) -> np.ndarray: ...
    def getAllWavelengths(self) -> np.ndarray: ...
    def getAllMasks(self) -> np.ndarray: ...
    def getAllCovariances(self) -> np.ndarray: ...
    def getAllBackgrounds(self) -> np.ndarray: ...
    def getAllNormalizations(self) -> np.ndarray: ...
    def __len__(self) -> int: ...
    def __getitem__(self, index: int) -> Spectrum: ...
    def __setitem__(self, index: int, spectrum: Spectrum): ...
    def __iter__(self) -> Iterator[Spectrum]: ...  # auto-provided by python from len and getitem
